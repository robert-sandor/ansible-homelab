http-endpoint-defaults: &http-endpoint-defaults
  interval: {{ gatus_http_interval | default('5m') }}
  client:
    timeout: 30s
  conditions:
    - "[STATUS] < 400"
    - "[RESPONSE_TIME] < 300"
    - "[CERTIFICATE_EXPIRATION] > 21d"
  alerts:
    - type: ntfy
{% if gatus_discord_webhook | length > 0 %}
    - type: discord
{% endif %}

connectivity:
  checker:
    target: 1.1.1.1:53
    interval: 5m

storage:
  type: postgres
  path: postgres://{{ gatus_db_user }}:{{ gatus_db_pass }}@db:5432/{{ gatus_db_name }}?sslmode=disable
  caching: true

ui:
  title: Gatus @ {{ hostname }}
  header: Gatus @ {{ hostname }}
  dark-mode: true

alerting:
{% if groups['ntfy'] | length > 0 %}
  ntfy:
    topic: alerts
    url: https://ntfy.{{ groups['ntfy'][0] }}.{{ domain }}
    click: https://gatus.{{ hostname }}
    priority: 1
    default-alert:
      failure-threshold: 3
      send-on-resolved: true
{% endif %}
{% if gatus_discord_webhook | length > 0 %}
  discord:
    webhook-url: "{{ gatus_discord_webhook }}"
    title: "@everyone :sos: gatus"
    default-alert:
      failure-threshold: 3
      send-on-resolved: true
{% endif %}

endpoints:
# Endpoints automatically generated by Ansible
  - name: Gatus running on {{ hostname }}
    group: admin
    url: https://gatus.{{ hostname }}
    <<: *http-endpoint-defaults

{% for host in groups['adguardhome'] | sort %}
  # AdguardHome @ {{ host }}
  - name: AdguardHome running on {{ host }}
    group: admin
    url: https://adguardhome.{{ host }}.{{ domain }}
    <<: *http-endpoint-defaults

{% for dns_host in groups['system'] | sort %}
  - name: DNS resolution for {{ dns_host }}.{{ domain }} on {{ host }}
    group: admin
    url: "{{ hostvars[host].ansible_default_ipv4.address }}"
    dns:
      query-name: "{{ dns_host }}.{{ domain }}"
      query-type: A
    conditions:
      - "[BODY] == {{ hostvars[dns_host].ansible_default_ipv4.address }}"
      - "[DNS_RCODE] == NOERROR"
    alerts:
      - type: ntfy

{% endfor %}{% endfor %}

{% for host in groups['base'] | sort %}
  - name: Traefik running on {{ host }}
    group: admin
    url: https://traefik.{{ host }}.{{ domain }}
    <<: *http-endpoint-defaults

  - name: Docker API running on {{ host }}
    group: admin
    url: tcp://{{ host }}.{{ domain }}:2375
    <<: *http-endpoint-defaults
    conditions:
      - "[CONNECTED] == true"
{% endfor %}

{% for host in groups['beszel'] | sort %}
{% if hostvars[host].beszel_hub | default(false) %}
  - name: Beszel running on {{ host }}
    group: admin
    url: https://beszel.{{ host }}.{{ domain }}/healthcheck
    <<: *http-endpoint-defaults
{% endif %}
{% endfor %}

{% for host in groups['core'] | sort %}
  - name: LLDAP running on {{ host }}
    group: admin
    url: https://lldap.{{ host }}.{{ domain }}
    <<: *http-endpoint-defaults

  - name: Authelia running on {{ host }}
    group: admin
    url: https://auth.{{ host }}.{{ domain }}
    <<: *http-endpoint-defaults
{% endfor %}

{% for host in groups['dozzle'] | sort %}
{% if hostvars[host].dozzle_server | default(false) %}
  - name: Dozzle running on {{ host }}
    group: admin
    url: https://dozzle.{{ host }}.{{ domain }}/healthcheck
    <<: *http-endpoint-defaults
{% endif %}
{% endfor %}

{% for host in groups['gitea'] | sort %}
  - name: Gitea running on {{ host }}
    group: apps
    url: https://gitea.{{ host }}.{{ domain }}
    <<: *http-endpoint-defaults
{% endfor %}

{% for host in groups['healthchecks'] | sort %}
  - name: Healthchecks running on {{ host }}
    group: admin
    url: https://healthchecks.{{ host }}.{{ domain }}
    <<: *http-endpoint-defaults
{% endfor %}

{% for host in groups['homepage'] | sort %}
  - name: Homepage running on {{ host }}
    group: admin
    url: https://home.{{ host }}.{{ domain }}
    <<: *http-endpoint-defaults
{% endfor %}

{% for host in groups['immich'] | sort %}
  - name: Immich running on {{ host }}
    group: apps
    url: https://immich.{{ host }}.{{ domain }}
    <<: *http-endpoint-defaults
{% endfor %}

{% for host in groups['ittools'] | sort %}
  - name: IT Tools running on {{ host }}
    group: apps
    url: https://ittools.{{ host }}.{{ domain }}
    <<: *http-endpoint-defaults
{% endfor %}

{% for host in groups['jellyfin'] | sort %}
  - name: Jellyfin running on {{ host }}
    group: apps
    url: https://jellyfin.{{ host }}.{{ domain }}
    <<: *http-endpoint-defaults
{% endfor %}

{% for host in groups['manyfold'] | sort %}
  - name: Manyfold running on {{ host }}
    group: apps
    url: https://manyfold.{{ host }}.{{ domain }}
    <<: *http-endpoint-defaults
{% endfor %}

{% for host in groups['mealie'] | sort %}
  - name: Mealie running on {{ host }}
    group: apps
    url: https://mealie.{{ host }}.{{ domain }}
    <<: *http-endpoint-defaults
{% endfor %}

{% for host in groups['netdata'] | sort %}
  - name: Netdata running on {{ host }}
    group: apps
    url: https://netdata.{{ host }}.{{ domain }}
    <<: *http-endpoint-defaults
{% endfor %}

{% for host in groups['nextcloud'] | sort %}
  - name: Nextcloud running on {{ host }}
    group: apps
    url: https://nextcloud.{{ host }}.{{ domain }}
    <<: *http-endpoint-defaults
{% endfor %}

{% for host in groups['ntfy'] | sort %}
  - name: Ntfy running on {{ host }}
    group: admin
    url: https://ntfy.{{ host }}.{{ domain }}
    <<: *http-endpoint-defaults
{% endfor %}

{% for host in groups['paperless'] | sort %}
  - name: Paperless running on {{ host }}
    group: apps
    url: https://paperless.{{ host }}.{{ domain }}
    <<: *http-endpoint-defaults
{% endfor %}

{% for host in groups['plex'] | sort %}
  - name: Plex running on {{ host }}
    group: apps
    url: https://plex.{{ host }}.{{ domain }}/web/index.html
    <<: *http-endpoint-defaults
{% endfor %}

{% for host in groups['portainer'] | sort %}
{% if hostvars[host].portainer_server | default(false) %}
  - name: Portainer running on {{ host }}
    group: admin
    url: https://portainer.{{ host }}.{{ domain }}
    <<: *http-endpoint-defaults
{% endif %}
{% endfor %}

{% for host in groups['radarr'] | sort %}
  - name: Radarr running on {{ host }}
    group: apps
    url: https://radarr.{{ host }}.{{ domain }}
    <<: *http-endpoint-defaults
{% endfor %}

{% for host in groups['sonarr'] | sort %}
  - name: Sonarr running on {{ host }}
    group: apps
    url: https://sonarr.{{ host }}.{{ domain }}
    <<: *http-endpoint-defaults
{% endfor %}

{% for host in groups['transmission'] | sort %}
  - name: Transmission running on {{ host }}
    group: apps
    url: https://transmission.{{ host }}.{{ domain }}
    <<: *http-endpoint-defaults
{% endfor %}

{% for host in groups['vaultwarden'] | sort %}
  - name: Vaultwarden running on {{ host }}
    group: apps
    url: https://vaultwarden.{{ host }}.{{ domain }}
    <<: *http-endpoint-defaults
{% endfor %}

# Custom endpoints
{% for mon in gatus_custom_monitors %}
  - <<: *http-endpoint-defaults
    {{ mon | to_nice_yaml | indent(4, False) }}
{% endfor %}
