---
- name: Install prerequisites
  become: true
  ansible.builtin.apt:
    pkg:
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    state: present

- name: Setup Docker GPG key
  become: true
  ansible.builtin.shell:
    executable: /usr/bin/bash
    cmd: |
      set -eo pipefail
      install -m 0755 -d /etc/apt/keyrings
      curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
      chmod a+r /etc/apt/keyrings/docker.gpg
    creates: /etc/apt/keyrings/docker.gpg

- name: Add docker repository
  become: true
  ansible.builtin.apt_repository:
    update_cache: true
    repo: >-
      deb [arch={{ 'amd64' if 'x86_64' in ansible_facts.architecture else 'arm64' }}
      signed-by=/etc/apt/keyrings/docker.gpg]
      https://download.docker.com/linux/{{ 'debian' if ansible_facts.distribution | lower == 'debian' else 'ubuntu' }}
      {{ ansible_facts.distribution_release }} stable
    state: present
    filename: docker

- name: Install docker
  become: true
  ansible.builtin.apt:
    pkg:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-compose-plugin

- name: Install docker python dependencies
  ansible.builtin.pip:
    name:
      - docker
      - jsondiff

- name: Ensure docker group is present
  become: true
  ansible.builtin.group:
    name: docker

- name: Add user to docker group
  become: true
  ansible.builtin.user:
    name: "{{ ansible_facts.user_id }}"
    groups: docker
    append: true

- name: Reset connection
  ansible.builtin.meta: reset_connection

- name: Enable docker daemon to run at boot
  become: true
  ansible.builtin.systemd:
    name: docker
    state: started
    enabled: true

- name: Ensure /etc/docker/daemon.json exists
  become: true
  ansible.builtin.file:
    state: touch
    access_time: preserve
    modification_time: preserve
    path: /etc/docker/daemon.json
    owner: root
    group: root
    mode: "0644"

- name: Read docker daemon config if it exists
  become: true
  ansible.builtin.command: cat /etc/docker/daemon.json
  changed_when: false
  register: docker_daemon_config

- name: Cleanup docker
  community.docker.docker_prune:
    containers: true
    images: true
    networks: true
    volumes: false

- name: Set docker daemon config
  vars:
    docker_config: "{{ docker_daemon_config.stdout | from_json if docker_daemon_config.stdout | length > 0 else {} }}"
    docker_config_updates:
      insecure-registries: "{{ (docker_config['insecure-registries'] | default([]) + base_docker_insecure_registries) | unique }}"
      registry-mirrors: "{{ (docker_config['registry-mirrors'] | default([]) + base_docker_registry_mirrors) | unique }}"
      metrics-addr: "0.0.0.0:9323" # TODO: can this be restricted to docker networks only?
  become: true
  ansible.builtin.copy:
    content: "{{ docker_config | combine(docker_config_updates, recursive=True) | to_nice_json(indent=2) }}"
    dest: /etc/docker/daemon.json
    owner: root
    group: root
    mode: "0644"
  notify: Restart Docker
