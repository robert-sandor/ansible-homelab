---
services:
  traefik:
    image: traefik:{{ base_traefik_version }}
    restart: always
    env_file:
      - traefik.env
    networks:
      - traefik
    extra_hosts:
      - host.docker.internal:host-gateway
    ports:
      - "80:80"
      - "443:443"
      - "465:465"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.yml:/etc/traefik/traefik.yml:ro
      - ./traefik:/etc/traefik/file_provider:ro
      - ./traefik_secrets:/secrets:ro
      - traefik:/letsencrypt
    labels:
      traefik.enable: true
      # Access to dashboard
      traefik.http.routers.traefik.rule: Host(`traefik.{{ hostname }}`)
      traefik.http.routers.traefik.entrypoints: https
      traefik.http.routers.traefik.service: api@internal
      # Authelia middlewares
      traefik.http.middlewares.authelia.forwardauth.address: http://{{ core_hostname }}:9091/api/authz/forward-auth
      traefik.http.middlewares.authelia.forwardauth.trustForwardHeader: true
      traefik.http.middlewares.authelia.forwardauth.authResponseHeaders: Remote-User,Remote-Groups,Remote-Name,Remote-Email
      # homepage
      homepage.name: traefik
      homepage.group: traefik
      homepage.description: reverse proxy @ {{ ansible_hostname }}
      homepage.href: https://traefik.{{ hostname }}
      homepage.icon: traefik
      homepage.siteMonitor: https://traefik.{{ hostname }}
      # watchtower
      com.centurylinklabs.watchtower.enable: true

  watchtower:
    hostname: watchtower
    image: ghcr.io/containrrr/watchtower:{{ base_watchtower_version }}
    restart: always
    command: --cleanup --label-enable --no-startup-message
    environment:
      TZ: "{{ timezone }}"
      WATCHTOWER_SCHEDULE: "{{ base_watchtower_schedule }}"
      WATCHTOWER_NOTIFICATION_URL: "{{ base_watchtower_notification_url }}"
      WATCHTOWER_NOTIFICATIONS_HOSTNAME: watchtower.{{ hostname }}
    networks:
      - traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      com.centurylinklabs.watchtower.enable: true

  docker_socket_proxy:
    image: ghcr.io/linuxserver/socket-proxy:{{ base_dsp_version }}
    restart: always
    environment:
      CONTAINERS: 1
      IMAGES: 1
      POST: 0
      LOG_LEVEL: warning
    networks:
      - docker
    ports:
      - "2375:2375"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      com.centurylinklabs.watchtower.enable: true

networks:
  traefik:
    # name: traefik
    external: true
  docker:


volumes:
  traefik:
