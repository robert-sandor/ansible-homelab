---
services:
  traefik:
    image: traefik:{{ base_traefik_version }}
    restart: unless-stopped
    env_file:
      - traefik.env
    networks:
      - traefik
    extra_hosts:
      - host.docker.internal:host-gateway
    ports:
      - "80:80"
      - "443:443"
      - "465:465"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.yml:/etc/traefik/traefik.yml:ro
      - ./traefik:/etc/traefik/file_provider:ro
      - ./traefik_secrets:/secrets:ro
      - traefik:/letsencrypt
    labels:
      traefik.enable: true
      # Access to dashboard
      traefik.http.routers.traefik.rule: Host(`traefik.{{ hostname }}`)
      traefik.http.routers.traefik.entrypoints: https
      traefik.http.routers.traefik.service: api@internal
      # Authelia middlewares
      traefik.http.middlewares.authelia.forwardauth.address: http://{{ core_hostname }}:9091/api/authz/forward-auth
      traefik.http.middlewares.authelia.forwardauth.trustForwardHeader: true
      traefik.http.middlewares.authelia.forwardauth.authResponseHeaders: Remote-User,Remote-Groups,Remote-Name,Remote-Email
      # homepage
      homepage.name: traefik
      homepage.group: traefik
      homepage.description: reverse proxy @ {{ ansible_hostname }}
      homepage.href: https://traefik.{{ hostname }}
      homepage.icon: traefik
      homepage.siteMonitor: https://traefik.{{ hostname }}
      # watchtower
      com.centurylinklabs.watchtower.enable: true

  watchtower:
    hostname: watchtower
    image: ghcr.io/containrrr/watchtower:{{ base_watchtower_version }}
    restart: unless-stopped
    command: --cleanup --label-enable --no-startup-message
    environment:
      TZ: "{{ timezone }}"
      WATCHTOWER_SCHEDULE: "{{ base_watchtower_schedule }}"
      WATCHTOWER_NOTIFICATION_URL: "{{ base_watchtower_notification_url }}"
      WATCHTOWER_NOTIFICATIONS_HOSTNAME: watchtower.{{ hostname }}
    networks:
      - traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      com.centurylinklabs.watchtower.enable: true

  docker_socket_proxy:
    image: ghcr.io/linuxserver/socket-proxy:{{ base_dsp_version }}
    restart: unless-stopped
    environment:
      CONTAINERS: 1
      LOG_LEVEL: warning
    networks:
      - docker
    ports:
      - "2375:2375"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      com.centurylinklabs.watchtower.enable: true

  portainer_agent:
    image: portainer/agent:{{ base_portainer_agent_version }}
    restart: unless-stopped
    networks:
      - portainer
    ports:
      - "9001:9001"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      com.centurylinklabs.watchtower.enable: true

  node_exporter:
    image: quay.io/prometheus/node-exporter:{{ base_node_exporter_version }}
    restart: unless-stopped
    command: --path.rootfs=/host
    network_mode: host
    pid: host
    volumes:
      - "/:/host:ro,rslave"
    labels:
      com.centurylinklabs.watchtower.enable: true

  promtail:
    image: grafana/promtail:{{ base_promtail_version }}
    restart: unless-stopped
    command: -config.file=/etc/promtail/docker-config.yml
    networks:
      - traefik
    volumes:
      - ./promtail.yml:/etc/promtail/docker-config.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/log/journal:/var/log/journal:ro
      - /run/log/journal:/run/log/journal:ro
      - /etc/machine-id:/etc/machine-id:ro
    labels:
      traefik.enable: true
      traefik.http.services.promtail.loadbalancer.server.port: 9080
      traefik.http.routers.promtail.rule: Host(`promtail.{{ hostname }}`)
      traefik.http.routers.promtail.entrypoints: https
      traefik.http.routers.promtail.service: promtail
      homepage.name: promtail
      homepage.group: monitoring
      homepage.description: log aggregator @ {{ ansible_hostname }}
      homepage.href: https://promtail.{{ hostname }}
      homepage.icon: loki
      homepage.siteMonitor: https://promtail.{{ hostname }}
      com.centurylinklabs.watchtower.enable: true

  glances:
    image: nicolargo/glances:{{ base_glances_version }}
    restart: unless-stopped
    pid: host
    network_mode: host
    environment:
      GLANCES_OPT: -w
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    # {% if ansible_facts.packages['nvidia-container-toolkit'] | default([]) | length > 0 +%}
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    # {% endif +%}
    labels:
      traefik.enable: true
      traefik.http.services.glances.loadbalancer.server.port: 61208
      traefik.http.routers.glances.rule: Host(`glances.{{ hostname }}`)
      traefik.http.routers.glances.entrypoints: https
      traefik.http.routers.glances.service: glances
      homepage.name: glances
      homepage.group: monitoring
      homepage.description: system monitoring @ {{ ansible_hostname }}
      homepage.href: https://glances.{{ hostname }}
      homepage.icon: glances
      homepage.siteMonitor: https://glances.{{ hostname }}
      com.centurylinklabs.watchtower.enable: true

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:{{ base_cadvisor_version }}
    restart: unless-stopped
    privileged: true
    networks:
      - traefik
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    labels:
      traefik.enable: true
      traefik.http.services.cadvisor.loadbalancer.server.port: 8080
      traefik.http.routers.cadvisor.rule: Host(`cadvisor.{{ hostname }}`)
      traefik.http.routers.cadvisor.entrypoints: https
      traefik.http.routers.cadvisor.service: cadvisor
      homepage.name: cadvisor
      homepage.group: monitoring
      homepage.description: system monitoring @ {{ ansible_hostname }}
      homepage.href: https://cadvisor.{{ hostname }}
      homepage.icon: cadvisor
      homepage.siteMonitor: https://cadvisor.{{ hostname }}
      com.centurylinklabs.watchtower.enable: true

networks:
  traefik:
    # name: traefik
    external: true
  docker:
  portainer:

volumes:
  traefik:
