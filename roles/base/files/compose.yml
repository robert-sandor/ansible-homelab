version: "3"

services:
  traefik:
    container_name: traefik
    hostname: traefik
    image: traefik:$TRAEFIK_VERSION
    restart: unless-stopped
    env_file:
      - .traefik.env
    networks:
      - traefik
    ports:
      - "80:80"
      - "443:443"
      - "465:465"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.yml:/etc/traefik/traefik.yml:ro
      - ./traefik_secrets:/secrets:ro
      - traefik-letsencrypt:/letsencrypt
    labels:
      traefik.enable: "true"
      # Access to dashboard
      traefik.http.routers.traefik.rule: "Host(`traefik.$HOSTNAME`)"
      traefik.http.routers.traefik.entrypoints: https
      traefik.http.routers.traefik.service: api@internal
      traefik.http.routers.traefik.middlewares: authelia@docker
      # Access to metrics
      traefik.http.routers.traefik-metrics.rule: "Host(`traefik.$HOSTNAME`) && PathPrefix(`/metrics`)"
      traefik.http.routers.traefik-metrics.entrypoints: https
      traefik.http.routers.traefik-metrics.service: prometheus@internal
      # Authelia middlewares
      traefik.http.middlewares.authelia.forwardauth.address: "https://auth.$CORE_HOSTNAME/api/verify?rd=https://auth.$CORE_HOSTNAME"
      traefik.http.middlewares.authelia.forwardauth.trustForwardHeader: "true"
      traefik.http.middlewares.authelia.forwardauth.authResponseHeaders: "Remote-User,Remote-Groups,Remote-Name,Remote-Email"
      traefik.http.middlewares.authelia-basic.forwardauth.address: "https://auth.$CORE_HOSTNAME/api/verify?auth=basic"
      traefik.http.middlewares.authelia-basic.forwardauth.trustForwardHeader: "true"
      traefik.http.middlewares.authelia-basic.forwardauth.authResponseHeaders: "Remote-User,Remote-Groups,Remote-Name,Remote-Email"
      # Simplydash
      simplydash.enable: true
      simplydash.name: Traefik
      simplydash.group: admin
      simplydash.link: https://traefik.$HOSTNAME
      simplydash.description: $HOSTNAME
      simplydash.healthcheck.enable: true

  diun:
    container_name: diun
    hostname: diun.$HOSTNAME
    image: crazymax/diun:$DIUN_VERSION
    restart: unless-stopped
    command: serve
    env_file:
      - .diun.env
    environment:
      LOG_LEVEL: info
      LOG_JSON: "true"
    networks:
      - diun
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - diun-data:/data

  docker_socket_proxy:
    container_name: docker_socket_proxy
    hostname: docker_socket_proxy
    image: tecnativa/docker-socket-proxy:$DOCKER_SOCKET_PROXY_VERSION
    restart: unless-stopped
    environment:
      CONTAINERS: 1
    networks:
      - docker
    ports:
      - "2375:2375"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  portainer_agent:
    container_name: portainer_agent
    hostname: portainer_agent
    image: portainer/agent:$PORTAINER_AGENT_VERSION
    restart: unless-stopped
    networks:
      - portainer
    ports:
      - "9001:9001"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

networks:
  traefik:
    external: true
  diun: {}
  docker: {}
  portainer: {}

volumes:
  traefik-letsencrypt:
  diun-data:
