#
# WARNING: Make sure to use the docker-compose.yml of the current release:
#
# https://github.com/immich-app/immich/releases/latest/download/docker-compose.yml
#
# The compose file on main may not be compatible with the latest release.
#

name: immich

services:
  server:
    image: ghcr.io/immich-app/immich-server:{{ immich_version }}
    restart: unless-stopped
    user: "{{ ansible_facts.user_uid }}:{{ ansible_facts.user_gid }}"
    extends:
      file: hwaccel.transcoding.yml
      service: "{{ immich_hwaccel_transcoding }}" # set to one of [nvenc, quicksync, rkmpp, vaapi, vaapi-wsl] for accelerated transcoding
    environment:
      TZ: "{{ timezone }}"
      DB_HOSTNAME: db
      DB_USERNAME: "{{ immich_db_user }}"
      DB_DATABASE_NAME: "{{ immich_db_name }}"
      DB_PASSWORD: "{{ immich_db_password }}"
      REDIS_HOSTNAME: cache
    volumes:
      # Do not edit the next line. If you want to change the media storage location on your system, edit the value of UPLOAD_LOCATION in the .env file
      - "{{ immich_data_path }}:/usr/src/app/upload"
      - /etc/localtime:/etc/localtime:ro
    networks:
      - default
      - traefik
    depends_on:
      - cache
      - db
    healthcheck:
      disable: false
    labels:
      traefik.enable: true
      traefik.http.services.immich.loadbalancer.server.port: 3001
      traefik.http.routers.immich.rule: Host(`immich.{{ hostname }}`)
      traefik.http.routers.immich.entrypoints: https
      traefik.http.routers.immich.service: immich
      homepage.name: immich
      homepage.group: apps
      homepage.description: pictures
      homepage.href: https://immich.{{ hostname }}
      homepage.icon: immich
      homepage.siteMonitor: https://immich.{{ hostname }}
      com.centurylinklabs.watchtower.enable: true

  machine-learning:
    # For hardware acceleration, add one of -[armnn, cuda, openvino] to the image tag.
    # Example tag: ${IMMICH_VERSION:-release}-cuda
    image: ghcr.io/immich-app/immich-machine-learning:{{ immich_version }}{{ '' if immich_hwaccel_ml == 'cpu' else '-' + immich_hwaccel_ml }}
    restart: unless-stopped
    user: "{{ ansible_facts.user_uid }}:{{ ansible_facts.user_gid }}"
    extends: # uncomment this section for hardware acceleration - see https://immich.app/docs/features/ml-hardware-acceleration
      file: hwaccel.ml.yml
      service: "{{ immich_hwaccel_ml }}" # set to one of [armnn, cuda, openvino, openvino-wsl] for accelerated inference - use the `-wsl` version for WSL2 where applicable
    environment:
      TZ: "{{ timezone }}"
      DB_HOSTNAME: db
      DB_USERNAME: "{{ immich_db_user }}"
      DB_DATABASE_NAME: "{{ immich_db_name }}"
      DB_PASSWORD: "{{ immich_db_password }}"
      REDIS_HOSTNAME: cache
    volumes:
      - model-cache:/cache
      - ml-config:/.config
      - ml-cache:/.cache
    healthcheck:
      disable: false

  # NOTE: immich team is planning to drop this - no need to update to valkey or newer version
  cache:
    image: docker.io/redis:6.2-alpine@sha256:2d1463258f2764328496376f5d965f20c6a67f66ea2b06dc42af351f75248792
    restart: unless-stopped
    volumes:
      - cache:/data
    healthcheck:
      test: redis-cli ping || exit 1

  db:
    image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:90724186f0a3517cf6914295b5ab410db9ce23190a2d9d0b9dd6463e3fa298f0
    environment:
      POSTGRES_PASSWORD: "{{ immich_db_password }}" # TODO: move to secret file
      POSTGRES_USER: "{{ immich_db_user }}"
      POSTGRES_DB: "{{ immich_db_name }}"
      POSTGRES_INITDB_ARGS: "--data-checksums"
      PGDATABASE: "{{ immich_db_name }}"
      PGUSER: "{{ immich_db_user }}"
      PGPASS: "{{ immich_db_password }}"
    volumes:
      # Do not edit the next line. If you want to change the database storage location on your system, edit the value of DB_DATA_LOCATION in the .env file
      - db:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready || exit 1; Chksum="$$(psql --tuples-only --no-align --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')"; echo "checksum failure count is $$Chksum"; [ "$$Chksum" = '0' ] || exit 1
      interval: 5m
      start_interval: 30s
      start_period: 5m
    command:
      [
        "postgres",
        "-c",
        "shared_preload_libraries=vectors.so",
        "-c",
        'search_path="$$user", public, vectors',
        "-c",
        "logging_collector=on",
        "-c",
        "max_wal_size=2GB",
        "-c",
        "shared_buffers=512MB",
        "-c",
        "wal_compression=on",
      ]
    restart: always

volumes:
  model-cache:
  db:
  cache:
  ml-cache:
  ml-config:

networks:
  traefik:
    external: true
