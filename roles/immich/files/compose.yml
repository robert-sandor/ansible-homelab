---
services:
  server:
    image: ghcr.io/immich-app/immich-server:$IMMICH_VERSION
    restart: always
    user: $PUID:$PGID
    extends:
      file: hwaccel.transcoding.yml
      service: $IMMICH_HW_TRANSCODING
    secrets:
      - db_pass
    env_file: immich.env
    volumes:
      - ./config.yml:/config.yml:ro
      - $IMMICH_DATA_PATH:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    networks:
      - default
      - traefik
    depends_on:
      - cache
      - db
    healthcheck:
      disable: false
    labels:
      traefik.enable: true
      traefik.http.services.immich.loadbalancer.server.port: 2283
      traefik.http.routers.immich.rule: Host(`immich.$HOSTNAME`)
      traefik.http.routers.immich.entrypoints: https
      traefik.http.routers.immich.service: immich
      homepage.name: immich
      homepage.group: apps
      homepage.description: pictures
      homepage.href: https://immich.$HOSTNAME
      homepage.icon: immich
      homepage.siteMonitor: https://immich.$HOSTNAME
      com.centurylinklabs.watchtower.enable: true

  machine-learning:
    image: ghcr.io/immich-app/immich-machine-learning:$IMMICH_VERSION$IMMICH_ML_TAG
    restart: always
    user: $PUID:$PGID
    extends:
      file: hwaccel.ml.yml
      service: $IMMICH_HW_ML
    secrets:
      - db_pass
    env_file: immich.env
    volumes:
      - ./config.yml:/config.yml:ro
      - model-cache:/cache
      - ml-config:/.config
      - ml-cache:/.cache
    healthcheck:
      disable: false

  # NOTE: immich team is planning to drop this - no need to update to valkey or newer version
  cache:
    image: docker.io/redis:6.2-alpine@sha256:2ba50e1ac3a0ea17b736ce9db2b0a9f6f8b85d4c27d5f5accc6a416d8f42c6d5
    restart: always
    volumes:
      - cache:/data
    healthcheck:
      test: redis-cli ping || exit 1

  db:
    image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:90724186f0a3517cf6914295b5ab410db9ce23190a2d9d0b9dd6463e3fa298f0
    secrets:
      - db_pass
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/db_pass
      POSTGRES_USER: $DB_USER
      POSTGRES_DB: $DB_NAME
      POSTGRES_INITDB_ARGS: --data-checksums
      PGDATABASE: $DB_NAME
      PGUSER: $DB_USER
      PGPASSFILE: /run/secrets/db_pass
    volumes:
      - db:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready || exit 1; Chksum="$$(psql --tuples-only --no-align --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')"; echo "checksum
        failure count is $$Chksum"; [ "$$Chksum" = '0' ] || exit 1
      interval: 5m
      start_interval: 30s
      start_period: 5m
    command:
      - postgres
      - -c
      - shared_preload_libraries=vectors.so
      - -c
      - search_path="$$user", public, vectors
      - -c
      - logging_collector=on
      - -c
      - max_wal_size=2GB
      - -c
      - shared_buffers=512MB
      - -c
      - wal_compression=on
    restart: always

secrets:
  db_pass:
    file: ./secrets/db_pass

volumes:
  model-cache:
  db:
  cache:
  ml-cache:
  ml-config:
networks:
  traefik:
    external: true
