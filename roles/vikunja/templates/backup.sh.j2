#!/usr/bin/env bash

set -euo pipefail

BACKUP_PATH="{{ backup_path }}"
DEPLOY_PATH="{{ deploy_path }}"
export COMPOSE_FILE="$DEPLOY_PATH/vikunja/compose.yml"

function backup {
  docker compose stop app && echo "stopped vikunja"

  docker compose exec -T db pg_dump >"$DEPLOY_PATH/vikunja/pg_dump.sql" && echo "dumped database"

  rsync -a "$DEPLOY_PATH/vikunja" "$BACKUP_PATH" && echo "synced files to backup path"

  docker compose up -d && echo "started vikunja"
}

function restore {
  rsync -a "$BACKUP_PATH/vikunja" "$DEPLOY_PATH" && echo "synced files to deploy path"

  docker compose up -d db && echo "started db"

  RETRY_COUNT=0
  while ! docker compose exec db pg_isready 2>/dev/null; do
    if [[ $RETRY_COUNT -ge 5 ]]; then
      echo "out of retries exitting"
      exit 1
    fi

    echo "waiting for db to be available"
    sleep 1
    RETRY_COUNT=$((RETRY_COUNT + 1))
  done

  docker compose exec -T db psql <"$DEPLOY_PATH/vikunja/pg_dump.sql" && echo "restored database"

  docker compose up -d && echo "started vikunja"
}

if [[ ${1:-backup} == restore ]]; then
  restore
else
  backup
fi

# vi ft=bash
