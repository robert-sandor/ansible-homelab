service:
  JWTSecret: "{{ vikunja_jwt_secret }}"
  publicurl: "{{ vikunja_url }}"
  enablecaldav: false # disabling for now as it's unstable
  enableregistration: true
  timezone: "{{ timezone }}"
  # If enabled, vikunja will send an email to everyone who is either assigned to a task or created it when a task reminder
  # is due.
  enableemailreminders: true
  allowiconchanges: false

database:
  type: postgres
  host: db
  database: "{{ vikunja_db_name }}"
  user: "{{ vikunja_db_user }}"
  password: "{{ vikunja_db_pass }}"

# TODO: consider adding typesense as well
typesense:
  # Whether to enable the Typesense integration. If true, all tasks will be synced to the configured Typesense
  # instance and all search and filtering will run through Typesense instead of only through the database.
  # Typesense allows fast fulltext search including fuzzy matching support. It may return different results than
  # what you'd get with a database-only search.
  enabled: false
  # The url to the Typesense instance you want to use. Can be hosted locally or in Typesense Cloud as long
  # as Vikunja is able to reach it.
  url: ""
  # The Typesense API key you want to use.
  apikey: ""

mailer:
  enabled: true
  # SMTP Host
  host: "{{ core_hostname }}"
  # SMTP Host port.
  # **NOTE:** If you're unable to send mail and the only error you see in the logs is an `EOF`, try setting the port to `25`.
  port: 465
  # SMTP Auth Type. Can be either `plain`, `login` or `cram-md5`.
  authtype: "plain"
  # SMTP username
  username: "user"
  # SMTP password
  password: ""
  # Wether to skip verification of the tls certificate on the server
  skiptlsverify: false
  # The default from address when sending emails
  fromemail: "vikunja@{{ domain }}"
  # The length of the mail queue.
  queuelength: 100
  # The timeout in seconds after which the current open connection to the mailserver will be closed.
  queuetimeout: 30
  # By default, vikunja will try to connect with starttls, use this option to force it to use ssl.
  forcessl: false

files:
  basepath: ./files
  maxsize: 20MB

backgrounds:
  enabled: false

auth:
  local:
    enabled: "{{ vikunja_local_auth_enable | bool | lower }}"
  openid:
    enabled: "{{ vikunja_openid_enable | bool | lower }}"
    providers:
      - name: "{{ vikunja_openid_name }}"
        authurl: "{{ vikunja_openid_authurl }}"
        clientid: "{{ vikunja_openid_clientid }}"
        clientsecret: "{{ vikunja_openid_clientsecret }}"
        scope: "{{ vikunja_openid_scope }}"

# TODO: consider exposing these as variables
metrics:
  enabled: false
  username:
  password:

defaultsettings:
  avatar_provider: initials
  week_start: 1
  timezone: "{{ timezone }}"
