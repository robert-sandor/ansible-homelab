---
services:
  grafana:
    image: grafana/grafana-oss:{{ monitoring_grafana_version }}
    restart: unless-stopped
    user: "{{ ansible_facts.user_uid }}:{{ ansible_facts.user_gid }}"
    depends_on:
      - grafana-db
      - loki
      - prometheus
    secrets:
      - grafana_db_password
    networks:
      - default
      - traefik
    volumes:
      - ./grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/provisioning:/etc/grafana/provisioning
      - grafana-data:/var/lib/grafana
    labels:
      traefik.enable: true
      traefik.http.services.grafana.loadbalancer.server.port: 3000
      traefik.http.routers.grafana.rule: Host(`grafana.{{ hostname }}`)
      traefik.http.routers.grafana.entrypoints: https
      traefik.http.routers.grafana.service: grafana
      homepage.name: grafana
      homepage.group: monitoring
      homepage.description: metrics and logs viewer
      homepage.href: https://grafana.{{ hostname }}
      homepage.icon: grafana
      homepage.siteMonitor: https://grafana.{{ hostname }}
      com.centurylinklabs.watchtower.enable: true

  grafana-db:
    image: postgres:{{ monitoring_grafana_postgres_version }}
    restart: unless-stopped
    secrets:
      - grafana_db_password
    environment:
      TZ: "{{ timezone }}"
      POSTGRES_USER: grafana
      POSTGRES_DB: grafana
      POSTGRES_PASSWORD_FILE: /run/secrets/grafana_db_password
      PGUSER: grafana
      PGDATABASE: grafana
      PGPASSFILE: /run/secrets/grafana_db_password
    volumes:
      - grafana-db:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready
      interval: 5s
      timeout: 2s
      retries: 5
      start_period: 5s
    labels:
      com.centurylinklabs.watchtower.enable: true

  loki:
    image: grafana/loki:{{ monitoring_loki_version }}
    restart: unless-stopped
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - traefik
    volumes:
      - loki-data:/loki
      - ./loki.yml:/etc/loki/local-config.yaml
    labels:
      traefik.enable: true
      traefik.http.services.loki.loadbalancer.server.port: 3100
      traefik.http.routers.loki.rule: Host(`loki.{{ hostname }}`)
      traefik.http.routers.loki.entrypoints: https
      traefik.http.routers.loki.service: loki
      com.centurylinklabs.watchtower.enable: true

  prometheus:
    image: prom/prometheus:{{ monitoring_prometheus_version }}
    restart: unless-stopped
    networks:
      - traefik
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    labels:
      traefik.enable: true
      traefik.http.services.prometheus.loadbalancer.server.port: 9090
      traefik.http.routers.prometheus.rule: Host(`prometheus.{{ hostname }}`)
      traefik.http.routers.prometheus.entrypoints: https
      traefik.http.routers.prometheus.service: prometheus
      homepage.name: prometheus
      homepage.group: monitoring
      homepage.description: time series database for metrics
      homepage.href: https://prometheus.{{ hostname }}
      homepage.icon: prometheus
      homepage.siteMonitor: https://prometheus.{{ hostname }}
      com.centurylinklabs.watchtower.enable: true

secrets:
  grafana_db_password:
    file: ./secrets/grafana_db_password

volumes:
  grafana-data:
  grafana-db:
  loki-data:
  prometheus-data:

networks:
  traefik:
    external: true
