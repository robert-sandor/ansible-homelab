---
services:
  server:
    image: vaultwarden/server:{{ vaultwarden_version }}
    user: "{{ ansible_facts.user_uid }}:{{ ansible_facts.user_gid }}"
    restart: unless-stopped
    depends_on:
      - db
    secrets:
      - vaultwarden_db_url
    environment:
      DATABASE_URL_FILE: /run/secrets/vaultwarden_db_url
      DOMAIN: https://vaultwarden.{{ hostname }}
      SIGNUPS_ALLOWED: "{{ vaultwarden_allow_signups }}"
      SHOW_PASSWORD_HINT: false
    networks:
      - default
      - traefik
    volumes:
      - ./data:/data
    labels:
      traefik.enable: true
      traefik.http.services.vaultwarden.loadbalancer.server.port: 80
      traefik.http.routers.vaultwarden.rule: Host(`vaultwarden.{{ hostname }}`)
      traefik.http.routers.vaultwarden.entrypoints: https
      traefik.http.routers.vaultwarden.service: vaultwarden
      homepage.name: vaultwarden
      homepage.group: apps
      homepage.description: password manager
      homepage.href: https://vaultwarden.{{ hostname }}
      homepage.icon: vaultwarden
      homepage.siteMonitor: https://vaultwarden.{{ hostname }}
      com.centurylinklabs.watchtower.enable: true

  db:
    image: postgres:{{ vaultwarden_postgres_version }}
    restart: unless-stopped
    secrets:
      - vaultwarden_db_password
    environment:
      POSTGRES_USER: "{{ vaultwarden_db_user }}"
      POSTGRES_DB: "{{ vaultwarden_db_name }}"
      POSTGRES_PASSWORD_FILE: /run/secrets/vaultwarden_db_password
      PGUSER: "{{ vaultwarden_db_user }}"
      PGDATABASE: "{{ vaultwarden_db_name }}"
      PGPASSFILE: /run/secrets/vaultwarden_db_password
    volumes:
      - db:/var/lib/postgresql/data
    labels:
      com.centurylinklabs.watchtower.enable: true

volumes:
  db:

secrets:
  vaultwarden_db_password:
    file: ./secrets/vaultwarden_db_password
  vaultwarden_db_url:
    file: ./secrets/vaultwarden_db_url

networks:
  traefik:
    external: true
