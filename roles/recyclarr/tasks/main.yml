---
- name: Get sonarr API key if not defined
  ansible.builtin.import_role:
    name: sonarr
    tasks_from: api_key
  when: sonarr_api_key is not defined and groups['sonarr'] | length > 0
  delegate_to: "{{ groups['sonarr'][0] }}"

- name: Get radarr API key if not defined
  ansible.builtin.import_role:
    name: radarr
    tasks_from: api_key
  when: radarr_api_key is not defined and groups['radarr'] | length > 0
  delegate_to: "{{ groups['radarr'][0] }}"

- name: Ensure config directory exists
  ansible.builtin.file:
    dest: "{{ recyclarr_deploy_path }}/config"
    state: directory
    mode: "0750"

- name: Copy configuration file
  ansible.builtin.copy:
    content: "{{ recyclarr_config | to_nice_yaml }}"
    dest: "{{ recyclarr_deploy_path }}/config/recyclarr.yml"
    mode: "0640"
  notify: Recyclarr sync

- name: Template compose file
  ansible.builtin.template:
    src: compose.yml
    dest: "{{ recyclarr_deploy_path }}/compose.yml"
    mode: "0640"

- name: Start container
  community.docker.docker_compose_v2:
    project_src: "{{ recyclarr_deploy_path }}"
    pull: always
    remove_orphans: true
    state: present

- name: Create backup and restore scripts
  ansible.builtin.import_role:
    name: util
    tasks_from: backup_and_restore
  vars:
    util_backup_type: simple
    util_app: recyclarr
    util_deploy_path: "{{ recyclarr_deploy_path }}"
    util_backup_path: "{{ recyclarr_backup_path }}"
    util_stop_services: recyclarr
