---
theme: auto

log:
  level: info
  format: text

authentication_backend:
  refresh_interval: 1m
  ldap:
    implementation: custom
    address: ldap://lldap:3890
    timeout: 5s
    start_tls: false
    base_dn: "{{ ['dc='] | product(domain | split('.')) | map('join') | join(',') }}"
    additional_users_dn: ou=people
    users_filter: "(&({username_attribute}={input})(objectClass=person))"
    additional_groups_dn: ou=groups
    groups_filter: "(member={dn})"
    user: uid=admin,ou=people,{{ ['dc='] | product(domain | split('.')) | map('join') | join(',') }}
    attributes:
      distinguished_name: "distinguishedName"
      username: "uid"
      mail: "mail"
      member_of: "memberOf"
      group_name: "cn"

access_control:
  default_policy: deny
  rules:
    - domain: "*.{{ domain }}"
      policy: bypass
      networks:
        - 172.16.0.0/12
        - "{{ ansible_default_ipv4.address }}/32"
    - policy: one_factor
      subject:
        - group:admins
      domain: "*.{{ domain }}"
    - policy: one_factor
      subject:
        - group:users
      domain:
        # {% for item in core_authelia_users_allowed_hosts %}
        # Generated by ansible
        - "{{ item }}.{{ domain }}"
# {% endfor %}

session:
  name: authelia_{{ ansible_hostname }}_session
  cookies:
    - domain: "{{ domain }}"
      authelia_url: https://auth.{{ ansible_hostname }}.{{ domain }}
  redis:
    host: authelia-redis
    port: 6379

storage:
  postgres:
    address: authelia-postgres:5432
    database: authelia
    username: authelia

notifier:
  smtp:
    address: smtp://mailrise:8025
    timeout: 30s
    sender: Authelia <authelia@{{ domain }}>
    identifier: auth.{{ ansible_hostname }}.{{ domain }}
    disable_require_tls: true
    disable_starttls: true
    disable_html_emails: true

identity_providers:
  oidc:
    jwks:
      - key: |
          {{ '{{ secret "/run/secrets/authelia_oidc_issuer_private_key" | mindent 10 "|" | msquote }}' }}
    cors:
      endpoints:
        - userinfo
        - authorization
        - token
        - revocation
        - introspection
    clients:
      # Grafana {% if core_authelia_portainer_client %}

      - client_id: portainer
        client_name: Portainer
        client_secret: >-
          {{ '{{ secret "/run/secrets/authelia_portainer_client_secret" }}' }}
        authorization_policy: one_factor
        redirect_uris:
          - https://portainer.{{ core_authelia_portainer_host }}.{{ domain }}
        scopes:
          - openid
          - profile
          - groups
          - email
        userinfo_signed_response_alg: none
      # {% endif %}
      # Grafana {% if core_authelia_grafana_client %}

      - client_id: grafana
        client_name: Grafana
        client_secret: >-
          {{ '{{ secret "/run/secrets/authelia_grafana_client_secret" }}' }}
        public: false
        authorization_policy: one_factor
        redirect_uris:
          - https://grafana.{{ core_authelia_grafana_host }}.{{ domain }}/login/generic_oauth
        scopes:
          - openid
          - profile
          - groups
          - email
        userinfo_signed_response_alg: none
        token_endpoint_auth_method: client_secret_post
      # {% endif %}
      # vikunja {% if core_authelia_vikunja_client %}

      - client_id: vikunja
        client_name: vikunja
        client_secret: >-
          {{ '{{ secret "/run/secrets/authelia_vikunja_client_secret" }}' }}
        public: false
        authorization_policy: one_factor
        redirect_uris:
          - https://vikunja.{{ core_authelia_vikunja_host }}.{{ domain }}/auth/openid/authelia
        scopes:
          - openid
          - profile
          - email
        userinfo_signed_response_alg: none
        token_endpoint_auth_method: client_secret_basic
      # {% endif %}
      # mealie {% if core_authelia_mealie_client %}

      - client_id: mealie
        client_name: mealie
        public: true
        authorization_policy: one_factor
        require_pkce: true
        pkce_challenge_method: S256
        redirect_uris:
          - https://mealie.{{ core_authelia_mealie_host }}.{{ domain }}/login
        scopes:
          - openid
          - profile
          - email
          - groups
        userinfo_signed_response_alg: none
        token_endpoint_auth_method: none
      # {% endif %}
      # memos {% if core_authelia_memos_client %}

      - client_id: memos
        client_name: Memos
        client_secret: >-
          {{ '{{ secret "/run/secrets/authelia_memos_client_secret" }}' }}
        public: false
        authorization_policy: one_factor
        redirect_uris:
          - "https://memos.{{ core_authelia_memos_host }}.{{ domain }}/auth/callback"
        scopes:
          - openid
          - profile
          - email
        grant_types:
          - authorization_code
        userinfo_signed_response_alg: none
        token_endpoint_auth_method: client_secret_post
      # {% endif %}
