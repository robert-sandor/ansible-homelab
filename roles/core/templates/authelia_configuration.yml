---
theme: auto

log:
  level: info
  format: text

authentication_backend:
  refresh_interval: 1m
  ldap:
    implementation: custom
    address: ldap://lldap:3890
    timeout: 5s
    start_tls: false
    base_dn: "{{ ['dc='] | product(domain | split('.')) | map('join') | join(',') }}"
    additional_users_dn: ou=people
    users_filter: "(&({username_attribute}={input})(objectClass=person))"
    additional_groups_dn: ou=groups
    groups_filter: "(member={dn})"
    user: uid=admin,ou=people,{{ ['dc='] | product(domain | split('.')) | map('join') | join(',') }}
    password: >-
      {{ '{{ secret "/run/secrets/lldap_user_pass" }}' }}
    attributes:
      distinguished_name: "distinguishedName"
      username: "uid"
      mail: "mail"
      member_of: "memberOf"
      group_name: "cn"

identity_validation:
  reset_password:
    jwt_secret: >-
      {{ '{{ secret "/run/secrets/authelia_identity_validation_reset_password_jwt_secret" }}' }}

access_control:
  default_policy: deny
  rules:
    - domain: "*.{{ domain }}"
      policy: bypass
      networks:
        - 172.16.0.0/12
        - "{{ ansible_default_ipv4.address }}/32"
    - policy: one_factor
      subject:
        - group:admins
      domain: "*.{{ domain }}"
    - policy: one_factor
      subject:
        - group:users
      domain:
        # Generated by ansible {% for item in core_authelia_users_allowed_hosts +%}
        - "{{ item }}.{{ domain }}"
# {% endfor %}

session:
  name: authelia_{{ ansible_hostname }}_session
  secret: >-
    {{ '{{ secret "/run/secrets/authelia_session_secret" }}' }}
  cookies:
    - domain: "{{ domain }}"
      authelia_url: https://auth.{{ ansible_hostname }}.{{ domain }}
  redis:
    host: authelia-cache
    port: 6379

storage:
  encryption_key: >-
    {{ '{{ secret "/run/secrets/authelia_storage_secret" }}' }}
  postgres:
    address: authelia-db:5432
    database: authelia
    username: authelia
    password: >-
      {{ '{{ secret "/run/secrets/authelia_postgres_password" }}' }}

notifier:
  smtp:
    address: smtp://mailrise:8025
    timeout: 30s
    sender: Authelia <authelia@{{ domain }}>
    identifier: auth.{{ ansible_hostname }}.{{ domain }}
    disable_require_tls: true
    disable_html_emails: true

identity_providers:
  oidc:
    hmac_secret: >-
      {{ '{{ secret "/run/secrets/authelia_oidc_hmac_secret" }}' }}
    jwks:
      - key: |
          {{ '{{ secret "/run/secrets/authelia_oidc_issuer_private_key" | mindent 10 "|" | msquote }}' }}
    cors:
      endpoints:
        - userinfo
        - authorization
        - token
        - revocation
        - introspection
    clients:
      - client_id: dummy
        client_name: Dummy
        client_secret: >-
          {{ '{{ secret "/run/secrets/authelia_portainer_client_secret" }}' }}
        authorization_policy: one_factor
        redirect_uris:
          - https://dummy.{{ hostname }}
        scopes:
          - openid
          - profile
          - groups
          - email
        userinfo_signed_response_alg: none
      # Portainer {% if core_authelia_portainer_client +%}
      - client_id: portainer
        client_name: Portainer
        client_secret: >-
          {{ '{{ secret "/run/secrets/authelia_portainer_client_secret" }}' }}
        authorization_policy: one_factor
        redirect_uris:
          - https://portainer.{{ core_authelia_portainer_host }}.{{ domain }}
        scopes:
          - openid
          - profile
          - groups
          - email
        userinfo_signed_response_alg: none
      # {% endif %}
      # grafana {% if groups['grafana'] | length > 0 +%}
      - client_id: grafana
        client_name: Grafana
        client_secret: >-
          {{ '{{ secret "/run/secrets/authelia_grafana_client_secret" }}' }}
        public: false
        authorization_policy: one_factor
        redirect_uris:
          - https://grafana.{{ groups['grafana'][0] }}.{{ domain }}/login/generic_oauth
        scopes:
          - openid
          - profile
          - groups
          - email
        userinfo_signed_response_alg: none
        token_endpoint_auth_method: client_secret_post
      # {% endif %}
      # vikunja {% if core_authelia_vikunja_client +%}
      - client_id: vikunja
        client_name: vikunja
        client_secret: >-
          {{ '{{ secret "/run/secrets/authelia_vikunja_client_secret" }}' }}
        public: false
        authorization_policy: one_factor
        redirect_uris:
          - https://vikunja.{{ core_authelia_vikunja_host }}.{{ domain }}/auth/openid/authelia
        scopes:
          - openid
          - profile
          - email
        userinfo_signed_response_alg: none
        token_endpoint_auth_method: client_secret_basic
      # {% endif %}
      # mealie {% if groups['mealie'] | length > 0 +%}
      - client_id: mealie
        client_name: mealie
        client_secret: >-
          {{ '{{ secret "/run/secrets/authelia_mealie_client_secret" }}' }}
        public: false
        authorization_policy: one_factor
        require_pkce: true
        pkce_challenge_method: S256
        redirect_uris:
          - https://mealie.{{ groups['mealie'][0] }}.{{ domain }}/login
        scopes:
          - openid
          - profile
          - email
          - groups
        userinfo_signed_response_alg: none
        token_endpoint_auth_method: client_secret_basic
      # {% endif %}
      # memos {% if core_authelia_memos_client +%}
      - client_id: memos
        client_name: Memos
        client_secret: >-
          {{ '{{ secret "/run/secrets/authelia_memos_client_secret" }}' }}
        public: false
        authorization_policy: one_factor
        redirect_uris:
          - "https://memos.{{ core_authelia_memos_host }}.{{ domain }}/auth/callback"
        scopes:
          - openid
          - profile
          - email
        grant_types:
          - authorization_code
        userinfo_signed_response_alg: none
        token_endpoint_auth_method: client_secret_post
      # {% endif %}
      # gitea {% if core_authelia_gitea_client +%}
      - client_id: gitea
        client_name: Gitea
        client_secret: >-
          {{ '{{ secret "/run/secrets/authelia_gitea_client_secret" }}' }}
        public: false
        authorization_policy: one_factor
        redirect_uris:
          - https://gitea.{{ core_authelia_gitea_host }}.{{ domain }}/user/oauth2/authelia/callback
        scopes:
          - openid
          - email
          - profile
        userinfo_signed_response_alg: none
        token_endpoint_auth_method: client_secret_basic
      # {% endif %}
      # paperless {% if core_authelia_paperless_client +%}
      - client_id: paperless
        client_name: paperless
        client_secret: >-
          {{ '{{ secret "/run/secrets/authelia_paperless_client_secret" }}' }}
        public: false
        authorization_policy: one_factor
        require_pkce: true
        pkce_challenge_method: S256
        redirect_uris:
          - https://paperless.{{ core_authelia_paperless_host }}.{{ domain }}/accounts/oidc/authelia/login/callback/
        scopes:
          - openid
          - email
          - profile
          - groups
        userinfo_signed_response_alg: none
        token_endpoint_auth_method: client_secret_basic
      # {% endif %}
      # immich {% if groups['immich'] | length > 0 +%}
      - client_id: immich
        client_name: immich
        client_secret: >-
          {{ '{{ secret "/run/secrets/authelia_immich_client_secret" }}' }}
        public: false
        authorization_policy: one_factor
        redirect_uris:
          - https://immich.{{ groups['immich'][0] }}.{{ domain }}/auth/login
          - https://immich.{{ groups['immich'][0] }}.{{ domain }}/user-settings
          - app.immich:///oauth-callback
        scopes:
          - openid
          - profile
          - email
        userinfo_signed_response_alg: none
      # {% endif %}
      # immich {% if groups['manyfold'] | length > 0 +%}
      - client_id: manyfold
        client_name: manyfold
        client_secret: >-
          {{ '{{ secret "/run/secrets/authelia_manyfold_client_secret" }}' }}
        public: false
        authorization_policy: one_factor
        redirect_uris:
          - https://manyfold.{{ groups['manyfold'][0] }}.{{ domain }}/users/auth/openid_connect/callback
        scopes:
          - openid
          - profile
          - email
        userinfo_signed_response_alg: none
      # {% endif %}
