---
services:
  mailrise:
    image: ghcr.io/yoryan/mailrise:{{ core_mailrise_version }}
    restart: unless-stopped
    networks:
      - traefik
    volumes:
      - ./mailrise.yml:/etc/mailrise.conf:ro
    labels:
      traefik.enable: true
      traefik.tcp.routers.mailrise.rule: HostSNI(`*`)
      traefik.tcp.routers.mailrise.tls: true
      traefik.tcp.routers.mailrise.entrypoints: smtp
      traefik.tcp.routers.mailrise.tls.certresolver: letsencrypt
      traefik.tcp.routers.mailrise.tls.domains[0].main: "mailrise.{{ hostname }}"
      traefik.tcp.routers.mailrise.tls.domains[0].sans: ""
      com.centurylinklabs.watchtower.enable: true

  lldap:
    image: lldap/lldap:{{ core_lldap_version }}
    restart: unless-stopped
    secrets:
      - lldap_jwt_secret
      - lldap_user_pass
    environment:
      TZ: "{{ timezone }}"
      UID: "{{ ansible_facts.user_uid }}"
      GID: "{{ ansible_facts.user_gid }}"
      LLDAP_JWT_SECRET_FILE: /run/secrets/lldap_jwt_secret
      LLDAP_LDAP_USER_PASS_FILE: /run/secrets/lldap_user_pass
    ports:
      - "3890:3890"
    networks:
      - traefik
      - lldap
    volumes:
      - ./lldap:/data
    depends_on:
      - lldap-db
      - mailrise
    labels:
      traefik.enable: true
      traefik.http.services.lldap.loadbalancer.server.port: 17170
      traefik.http.routers.lldap.rule: Host(`lldap.{{ hostname }}`)
      traefik.http.routers.lldap.entrypoints: https
      traefik.http.routers.lldap.service: lldap
      homepage.name: lldap
      homepage.group: admin
      homepage.description: user management with ldap
      homepage.href: https://lldap.{{ hostname }}
      homepage.icon: mdi-security
      homepage.siteMonitor: https://lldap.{{ hostname }}
      com.centurylinklabs.watchtower.enable: true

  lldap-db:
    image: postgres:{{ core_lldap_postgres_version }}
    restart: unless-stopped
    secrets:
      - lldap_postgres_password
    environment:
      TZ: "{{ timezone }}"
      POSTGRES_USER: lldap
      POSTGRES_DB: lldap
      POSTGRES_PASSWORD_FILE: /run/secrets/lldap_postgres_password
      PGUSER: lldap
      PGDATABASE: lldap
      PGPASSFILE: /run/secrets/lldap_postgres_password
    networks:
      - lldap
    volumes:
      - lldap-postgres:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -d lldap -U lldap
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 1s
    labels:
      com.centurylinklabs.watchtower.enable: true

  authelia:
    image: ghcr.io/authelia/authelia:{{ core_authelia_version }}
    restart: unless-stopped
    user: "{{ ansible_facts.user_uid }}:{{ ansible_facts.user_gid }}"
    environment:
      TZ: "{{ timezone }}"
      X_AUTHELIA_CONFIG_FILTERS: template
    networks:
      - authelia
      - traefik
    ports:
      - "9091:9091"
    volumes:
      - ./authelia:/config
      - ./secrets:/run/secrets:ro
    depends_on:
      - authelia-db
      - authelia-cache
      - lldap
      - mailrise
    labels:
      traefik.enable: true
      traefik.http.services.authelia.loadbalancer.server.port: 9091
      traefik.http.routers.authelia.rule: Host(`auth.{{ hostname }}`)
      traefik.http.routers.authelia.entrypoints: https
      traefik.http.routers.authelia.service: authelia
      homepage.name: authelia
      homepage.group: admin
      homepage.description: authentication server
      homepage.href: https://auth.{{ hostname }}
      homepage.icon: authelia
      homepage.siteMonitor: https://auth.{{ hostname }}
      com.centurylinklabs.watchtower.enable: true

  authelia-cache:
    image: valkey/valkey:{{ core_authelia_valkey_version }}
    restart: unless-stopped
    networks:
      - authelia
    volumes:
      - authelia_cache:/data
    healthcheck:
      test: valkey-cli --raw incr ping
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
    labels:
      com.centurylinklabs.watchtower.enable: true

  authelia-db:
    image: postgres:{{ core_authelia_postgres_version }}
    restart: unless-stopped
    secrets:
      - authelia_postgres_password
    environment:
      TZ: "{{ timezone }}"
      POSTGRES_USER: authelia
      POSTGRES_DB: authelia
      POSTGRES_PASSWORD_FILE: /run/secrets/authelia_postgres_password
      PGUSER: authelia
      PGDATABASE: authelia
      PGPASSFILE: /run/secrets/authelia_postgres_password
    networks:
      - authelia
    volumes:
      - authelia-postgres:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -d authelia -U authelia
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 1s
    labels:
      com.centurylinklabs.watchtower.enable: true

  portainer:
    image: portainer/portainer-ce:{{ core_portainer_version }}
    restart: unless-stopped
    networks:
      - traefik
    volumes:
      - portainer-data:/data
    labels:
      traefik.enable: true
      traefik.http.services.portainer.loadbalancer.server.port: 9000
      traefik.http.routers.portainer.rule: Host(`portainer.{{ hostname }}`)
      traefik.http.routers.portainer.entrypoints: https
      traefik.http.routers.portainer.service: portainer
      homepage.name: portainer
      homepage.group: admin
      homepage.description: manage docker environments
      homepage.href: https://portainer.{{ hostname }}
      homepage.icon: portainer
      homepage.siteMonitor: https://portainer.{{ hostname }}
      com.centurylinklabs.watchtower.enable: true

volumes:
  lldap-postgres:
    name: lldap-db
  authelia-postgres:
    name: authelia-db
  authelia_cache:
    name: authelia_cache
  portainer-data:
    name: portainer-data

networks:
  authelia:
  lldap:
  traefik:
    external: true

secrets:
  lldap_jwt_secret:
    file: ./secrets/lldap_jwt_secret
  lldap_user_pass:
    file: ./secrets/lldap_user_pass
  lldap_postgres_password:
    file: ./secrets/lldap_postgres_password
  authelia_identity_validation_reset_password_jwt_secret:
    file: ./secrets/authelia_identity_validation_reset_password_jwt_secret
  authelia_session_secret:
    file: ./secrets/authelia_session_secret
  authelia_storage_secret:
    file: ./secrets/authelia_storage_secret
  authelia_postgres_password:
    file: ./secrets/authelia_postgres_password
  authelia_oidc_hmac_secret:
    file: ./secrets/authelia_oidc_hmac_secret
  authelia_oidc_issuer_private_key:
    file: ./secrets/authelia_oidc_issuer_private_key
